while True:
        cmd = input()
        splitted = cmd.split()
        n = 6
        if cmd.lower() == "options":
            print(*['*'] * n, sep='-' * (n-1))
            print("\n**** INSTRUCTIONS TO ADJUST YOUR SEARCH **** \n\n"
                  "To get the <n> cases closest to your search, just type:\n\n"
                  "closest <n>\n\n"
                  "If you want to change some of the features in your search, just type:\n\n"
                  "feature <feature_name> '<feature_value>'\n\n"
                  "Example: to change the feature 'hotel' and give it the value 'Grand Hotel Auckland',"
                  " just type: \n\n"
                  "feature hotel 'Grand Hotel Auckland'\n\n"
                  "For a list of what features possible to change, just type:\n\n"
                  "features")
        elif cmd.lower() == "features":
            print("\naccommodations\n"
                  "duration\n"
                  "holidaytype\n"
                  "hotel\n"
                  "numberofpersons\n"
                  "price\n"
                  "region\n"
                  "season\n"
                  "transportation\n")
        elif (splitted[0] == "feature") & (len(splitted) > 2):
            if splitted[1].lower() == 'duration':
                try:
                    target_case.d = int(splitted[2])
                    print("duration changed to: " + str(target_case.d))
                except TypeError:
                    print("duration value must be an integer\n")
            elif splitted[1].lower() == 'accommodation':
                before = target_case.a
                target_case.a = ' '.join(splitted[2:])
                print(type(target_case.a), type(before))
                print(splitted[1].lower() + " changed to: " + str(target_case.a))
            else:
                print("Can't find any feature with the name: " + splitted[1])
        elif (splitted[0].lower() == "closest") & (len(splitted) > 1):
            print(JourneyCase.similarities()[0])
            try:
                cases = JourneyCase.similarities()[:int(splitted[1])]
                print('Case number ** Similarity')
                for case in cases:
                    print(case[0].journey_code.number, '**', case[1])
                print("\n")
            except TypeError:
                print("<n> must be an integer\n")
        elif cmd == 'q':
            break
        else:
            print("Invalid command.")